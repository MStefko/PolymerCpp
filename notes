//command line command
g++ -std=c++11 -O2 -I ./Eigen Main.cpp WormlikeChain.cpp RgDict.cpp Misc.cpp WLCCollector.cpp -o ../Debug/PolymerCpp -fopenmp


What do we have:
 - int numPaths
 		number of paths that have to be simulated for each
 		linDensity - persisLength combination

 - vector<double> pathLength - length of numPaths
 		length of each path in genomic length
 		number of base pairs in walk

 - double linDensity - number of base pairs per unit length

 - double persisLength - parameter of chain in units of unit length

 - double segConvFactor - conversion between user units and path segments

 - double locPrecision - bumping the chain

All these are passed to the WLCCollector. This collector then creates
a WormlikeChain instance for each linDensity - persisLength combination.

The WormlikeChain has to contain also all of the above (not fullSpecParam).
This chain then does a simulation of numPaths chains with parameters of
linDensity, persisLength, segConvFactor and a single member of pathLength.

Each of these simulations then creates a RgDict, where results of the simulation
and parameters of the simulation are kept.

The WormlikeChain then returns a vector of these RgDicts to the WLCCollector.
The WLCCollector can then save them or do whatever with them.


what does segConvFactor do?